name: CI/CD - Builder, Pousser & Déployer l'image sur K8s

on:
  push:
    tags:
      - "v*"

jobs:
  test-build-deploy:
    name: Test, Build & Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Installer les dépendances
        run: |
          pip install -r requirements.txt
          pip install pytest httpx

      - name: Lancer les tests Pytest
        run: pytest

      - name: Vérifier que le tag est bien sur la branche main
        run: |
          git fetch origin main --depth=1000
          BRANCH=$(git branch -r --contains ${{ github.sha }} | grep origin/main || true)
          if [ -z "$BRANCH" ]; then
            echo "Le tag n'est pas sur un commit de main. Annulation du workflow."
            exit 1
          else
            echo "Le tag est bien sur main, on continue..."
          fi

      - name: Connexion à GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: datalab-registry
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/datalab-registry/es_api_prod3:${{ github.ref_name }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: Charger le kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > kubeconfig
        shell: bash

      - name: Déployer sur Kubernetes
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl set image deployment/es-api es-api=ghcr.io/datalab-registry/es_api_prod3:${{ github.ref_name }} -n production
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
